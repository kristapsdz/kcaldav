.\"	$Id$
.\"
.\" Copyright (c) 2015, 2016 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 4 2016 $
.Dt KCALDAV 8
.Os
.Sh NAME
.Nm kcaldav
.Nd simple CalDAV server
.\" .Sh LIBRARY
.\" For sections 2, 3, and 9 only.
.\" Not used in OpenBSD.
.Sh SYNOPSIS
.Nm kcaldav
.Sh DESCRIPTION
The
.Nm
CGI program minimally implements CalDAV, with an emphasis on strong
authorisation and simplicity.
To use
.Nm ,
you'll need to first install a calendar database in the compile-time
root directory
.Pa @CALDIR@
with
.Xr kcaldav.passwd 1 .
The root directory is relative to the CGI script's file-system root.
.Pp
Once installed, you can point your calendar client to owned collections
or the calendar home (depending on the client) within the calendar root.
.Pp
For example, assume the script has been installed into
.Pa /var/www/cgi-bin
and is reachable at
.Pp
.Dl https://localhost/cgi-bin/kcaldav
.Pp
Moreover, assume your calendar root
.Pa @CALDIR@
is based in the web server's
.Xr chroot 2
in
.Pa /var/www .
It contains a
.Pa kcaldav.db
created by
.Xr kcaldav.passwd 1
specifying a single principal
.Pa kristaps
having a single calendar collection
.Pa calendar .
This can be created with
.Pp
.Dl # kcaldav.passwd -C -u kristaps
.Pp
If your CalDAV client supports the calendar-home-set feature, you can
point it to the principal URL:
.Pp
.Dl https://localhost/cgi-bin/kcaldav/kristaps/
.Pp
If the calendar-home-set feature is not supported by your client (e.g.,
with Thunderbird), you may need to point directly to the managed
calendar:
.Pp
.Dl https://localhost/cgi-bin/kcaldav/kristaps/calendar/
.Pp
A simpler setup might occur all in one directory, such as fully
installing into the user directory,
.Pa public_html ,
of a given user.
Here I assume that the directory has CGI-execute permissions set and the
CGI script
.Pa kcaldav.cgi
and its database installed into
.Pa /home/foo/public_html .
.Pp
The user can then access calenders on
.Pp
.Dl https://localhost/~foo/kcaldav.cgi/kristaps/
.Pp
In either case, please use HTTPS!
Although
.Nm
uses HTTP authentication to the fullest, that still doesn't protect you
from snooping.
.Ss System-Wide Calendar Administration
Let the root directory be
.Pa /caldav ,
a directory within the CGI script's
.Xr chroot 2
file-system,
which is read-writable by the CGI script running as user www.
Let the dummy user kcaldav be the owner of kcaldav files.
First make
.Xr kcaldav.passwd 1
set-user-ID for modifying the file.
.Bd -literal -offset indent
# chown kcaldav @PREFIX@/bin/kcaldav.passwd
# chmod u+s @PREFIX@/bin/kcaldav.passwd
.Ed
.Pp
Create user principals as follows:
.Bd -literal -offset indent
# kcaldav.passwd -f /caldav -C -u user1
# kcaldav.passwd -f /caldav -C -u user2
# ...
.Ed
.Pp
Now any local user can modify her principal's password without
administrator intervention.
.Pp
.Dl user1% kcaldav.passwd -f /caldav
.Ss Local Calendar Administration
Let the root directory be
.Pa /home/foo/caldav ,
which is readable by the web server running as user www and
read-writable by the logged-in user foo.
First, create the database and add principals as necessary.
.Pp
.Dl % kcaldav.passwd -C -u foo -f /home/foo/caldav
.\" .Sh CONTEXT
.\" For section 9 functions only.
.Ss Web Calendar Administration
.Nm
has built-in support for web-based administration by logged-in
(using HTTP authentication) principals through a web application of
HTML5, JavaScript, and CSS pages using
.Nm
as a JSON backend.
Let's assume these page have been installed into
.Pa /var/www/htdocs/kcaldav .
Principals can then access the server root,
.Pp
.Dl https://localhost/kcaldav/home.html
.Pp
to see their configuration.
.Pp
The principal foo can modify collection information online.
.Em Note :
you will need to make sure that the calendar database is read-writable
by the web server.
In general, the directory containing the database will also need to be
writable by the web server for creating its temporary transaction files.
.Sh HTTP METHODS
In this section, I describe each HTTP method supported.
.Ss DELETE
The DELETE method is handled according to RFC 4918.
Principals must have
.Dv DELETE
access.
Resource deletions process the
.Dq If-Match
header, if applied, for conditional deletion.
.Pp
Collection deletions begin by removing the
.Pa kcaldav.conf
file, which renders the directory opaque to
.Nm .
Following that, all files are removed followed by the directory itself.
.Em Note :
it is possible to remove the principal's home URL!
.Ss GET
The GET method is supported for calendar resources (defined by
content-type) as defined by RFC 4918.
The
.Dq If-None-Match
header is processed and checks the file etag (MD5 sum).
In all cases, the principal must have been delegated read access.
.Pp
For the JSON content-type (i.e., web application resources),
.Nm
routes into a management framework.
Only the
.Pa index.html
resource in the server root directory is supported.
Requests for the empty root
.Pq Dq \e
are aliased to
.Pa index.html .
.Ss POST
The POST method is supported only for text/html requests for specific
management (JSON content-type) resources.
POST methods on calendar collections are interpreted by the management
framework as JSON form requests to change collection properties.
The principal must have been delegated write access.
.Ss PROPFIND
The PROPFIND method queries collection or resource properties.
The principal must have been delegated read access.
It accepts the
.Dq Depth
header for recursive reports.
The following is a table of get-able properties.
.Pp
.TS
l l.
calendar-color	Apple extension
calendar-data	RFC 4791, 9.6
calendar-description	RFC 4791, 5.2.1
calendar-home-set	RFC 4791, 6.2.1
calendar-proxy-read-for	caldav-proxy.txt, 5.3.1
calendar-proxy-write-for	caldav-proxy.txt, 5.3.2
calendar-timezone	RFC 4791, 5.2.2
calendar-user-address-set	RFC 6638, 2.4.1
current-user-principal	RFC 5379, 3
current-user-privilege-set	RFC 3744, 5.4
displayname	RFC 4918, 15.2
getcontenttype	RFC 4918, 15.5
getctag	caldav-ctag-02, 4.1
getetag	RFC 4918, 15.6
group-member-set	RFC 3744, 4.3; caldav-proxy.txt
group-membership	RFC 3744, 4.4; caldav-proxy.txt
min-date-time	RFC 4791, 5.2.6
owner	RFC 4918, 14.17
principal-URL	RFC 3744, 4.2
quota-available-bytes	RFC 4331, 3
quota-used-bytes	RFC 4331, 4
resourcetype	RFC 4918, 15.9
schedule-calendar-transp	RFC 6638, 9.1
supported-calendar-component-set	RFC 4791, 5.2.3
supported-calendar-data	RFC 4791, 9.6
.TE
.Ss PROPPATCH
If the web server has write access to collection
.Pa kcaldav.conf
files and the principal has been delegated write access, its properties
may be modified.
The following is a table of settable properties.
.Pp
.TS
l l.
calendar-colour	Apple extension
calendar-description	RFC 4791, 5.2.1
displayname	RFC 4918, 15.2
.TE
.Ss PUT
The PUT method is supported for calendar resources where the principal
has been delegated write access.
.Pp
The
.Dq If-Match
and
.Dq If
headers are both accepted to check against etags (MD5 sums) and
conditionally replace resources.
.Ss REPORT
The REPORT method is handled similarly to
.Sx PROPFIND .
It accepts the
.Dq Depth
header for recursive reports.
.Sh IMPLEMENTATION NOTES
The
.Nm
system is fairly complicated, though as simple as it can be.
It focusses on safety and security throughout.
In this section, I describe several important topics regarding
implementation.
.Ss Authentication
.Nm
requires HTTP
.Dq QOP
digest authentication.
A nonce database
.Pa kcaldav.nonce.db
is maintained in the root calendar directory, consisting of nonce values
and their current nonce counts.
The
.Pa kcaldav.nonce.db
file is bound in size, with requests for new nonces evicting the oldest
request.
The use of nonces and nonce counts guarantees that principals are not
subject to replay attacks.
Nonces are 16-bytes of random data from
.Xr arc4random_buf 3 .
.Pp
To protect against attackers starving the nonce database by endlessly
requesting nonces (evicting valid nonces),
.Nm
uses a series of checks.
.Pp
When a client first accesses the system (without authentication), it is
given a random, unrecorded nonce.
.Pp
When the client re-authenticates using the random nonce and principal
credentials, the system first checks that the user is valid.
The nonce is then checked in the database.
If it is not found (the case for principals re-authenticating with the
random nonce), authentication is requested again with the
.Dq stale
directive and a new nonce entry in the database.
Replay nonces request a full re-authentication.
This step ensures that the principal is valid, though it could be a
replay attack from a nonce entry since evicted.
.Pp
Finally, the client re-authenticates with the recorded nonce and is able
to access the system.
.Pp
The remaining attack is for an adversary to build up a database of known
historical responses and replay them all at once.
.Ss Date and Time
Well-defined calendar date and time is required for computing ranges of
free-busy, multiget filters, and so on.
.Nm
parses valid RFC 2445 (iCalendar) calendar dates fully, encompassing
arbitrary repeat-rules and so on.
Parsing UTC time-stamps is well-defined using the formula from the
.Dq Single Unix Specification
section 15 on
.Dq Seconds since epoch .
Parsing embedded time-zone time-stamps is far more complicated, but
fully supported as defined by RFC 2445 using both the SUS algorithm and
Zeller's congruence to compute time components.
Other CalDAV implementations make use of
.Xr tzfile 5
databases: since
.Nm
assumes it is in a
.Xr chroot 2
and that this database is unavailable, it parses all time-zone
definitions directly.
.Pp
One of the most complex components of RFC 2445 is the repeat-rule, such
as that used for time-zone daylight and standard sub-component
definitions.
.Nm
enumerates over all possible repeat-rule instances, and is thus able to
accomodate for arbitrarily-complicated repeat rules.
.\" Not used in OpenBSD.
.\" .Sh RETURN VALUES
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr kcaldav.passwd 1
.Sh STANDARDS
The
.Nm
utility minimally implements RFC 4918 (WebDAV), RFC 4791 (CalDAV), and
of course RFC 2616 (HTTP).
It also implements the following extensions:
.Bl -tag -width Ds
.It caldav-ctag-02
The
.Dq ctag
Calendar Server Extension.
.It caldav-proxy.txt
Read-write delegation support.
.It RFC 2617
.Dq Digest
authentication of all users.
.It RFC 3744
ACL queries on the authenticated principal (not ACEs).
.It RFC 4331
Available and used bytes in the collection file-system via
.Xr fstatfs 2 .
.It RFC 5397
The current principal address.
.It RFC 7232
Conditional HTTP responses (etag,
.Dq If-Match ,
etc.).
.El
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
.\" Not used in OpenBSD.
